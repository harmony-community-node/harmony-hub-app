{"version":3,"sources":["components/youtube/card.js","components/youtube/youtubeWrapper.js"],"names":["useStyles","makeStyles","root","maxWidth","ImgMediaCard","state","snippet","title","description","media","thumbnails","medium","url","id","videoId","console","log","Card","className","href","target","CardActionArea","CardMedia","component","alt","height","image","CardContent","Typography","gutterBottom","variant","color","TwitterWrapper","useState","Youtube","updateYoutube","loader","setLoader","useEffect","init","a","axios","get","result","data","items","CircularProgress","length","map","value","index"],"mappings":"oPAUMA,EAAYC,YAAW,CAC3BC,KAAM,CACJC,SAAU,OAIC,SAASC,EAAT,GAAkC,IAAVC,EAAS,EAATA,MAAS,GAC9BL,IACeK,EAAMC,SAA7BC,EAFsC,EAEtCA,MAAOC,EAF+B,EAE/BA,YACTC,EAAQJ,EAAMC,QAAQI,WAAWC,OAAOC,IACxCA,EAAG,0CAAsCP,EAAMQ,GAAGC,SAGxD,OAFAC,QAAQC,IAAIT,EAAOC,EAAaC,EAAOG,GAGrC,eAACK,EAAA,EAAD,CAAMC,UAAU,aAAhB,UACG,IACD,mBAAGC,KAAMP,EAAKQ,OAAO,SAASF,UAAU,SAAxC,SACE,eAACG,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,UAAU,MACVC,IAAI,wBACJC,OAAO,MACPC,MAAOjB,EACPF,MAAM,0BAER,eAACoB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKP,UAAU,KAAhD,SACGhB,IAEH,cAACqB,EAAA,EAAD,CAAYE,QAAQ,QAAQC,MAAM,gBAAgBR,UAAU,IAA5D,SACGf,e,8BCnCA,SAASwB,IAAkB,IAAD,EACNC,mBAAS,IADH,mBAChCC,EADgC,KACvBC,EADuB,OAEXF,oBAAS,GAFE,mBAEhCG,EAFgC,KAExBC,EAFwB,KAkBvC,OAdAC,qBAAU,WACR,IAAMC,EAAI,uCAAG,8BAAAC,EAAA,sEACUC,IAAMC,IACzB,wKAFS,OACLC,EADK,OAILC,EAAOD,EAAOC,KAAKC,MACzBV,EAAcS,GACdP,GAAU,GACVtB,QAAQC,IAAI4B,GAPD,2CAAH,qDASVP,GAAU,GACVE,MACC,IAGD,sBAAKrB,UAAU,aAAf,UACGkB,GAAU,cAACU,EAAA,EAAD,KACTV,GACAF,EAAQa,OAAS,GACjBb,EAAQc,KAAI,SAACC,EAAOC,GAClB,OAAO,cAAC,EAAD,CAAM7C,MAAO4C","file":"static/js/7.e6e4707c.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n});\n\nexport default function ImgMediaCard({ state }) {\n  const classes = useStyles();\n  const { title, description } = state.snippet;\n  const media = state.snippet.thumbnails.medium.url;\n  const url = `https://www.youtube.com/watch?v=${state.id.videoId}`;\n  console.log(title, description, media, url);\n\n  return (\n    <Card className=\"cardHolder\">\n      {' '}\n      <a href={url} target=\"_blank\" className=\"anchor\">\n        <CardActionArea>\n          <CardMedia\n            component=\"img\"\n            alt=\"Contemplative Reptile\"\n            height=\"140\"\n            image={media}\n            title=\"Contemplative Reptile\"\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              {title}\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              {description}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n      </a>\n    </Card>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport Card from './card';\nimport axios from 'axios';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nexport default function TwitterWrapper() {\n  const [Youtube, updateYoutube] = useState([]);\n  const [loader, setLoader] = useState(true);\n\n  useEffect(() => {\n    const init = async () => {\n      const result = await axios.get(\n        'https://www.googleapis.com/youtube/v3/search?key=AIzaSyCYMCMmAMeTZ-Et0txHOj-3bU0G0ATRbMc&channelId=UCDfuhS7xu69IhK5AJSyiF0g&part=snippet,id&order=date&maxResults=20'\n      );\n      const data = result.data.items;\n      updateYoutube(data);\n      setLoader(false);\n      console.log(data);\n    };\n    setLoader(true);\n    init();\n  }, []);\n\n  return (\n    <div className=\"mediumWrap\">\n      {loader && <CircularProgress />}\n      {!loader &&\n        Youtube.length > 0 &&\n        Youtube.map((value, index) => {\n          return <Card state={value} />;\n        })}\n    </div>\n  );\n}\n"],"sourceRoot":""}