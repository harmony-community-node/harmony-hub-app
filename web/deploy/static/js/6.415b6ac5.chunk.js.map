{"version":3,"sources":["components/medium/card.js","components/medium/wrapper.js"],"names":["tagToText","node","tag","document","createElement","innerHTML","innerText","Card","props","className","src","post","thumbnail","onError","e","target","alt","title","replace","text","content","startingPoint","maxLength","length","slice","href","link","useStyles","makeStyles","theme","root","flexGrow","paper","textAlign","color","palette","secondary","CardWrapper","useState","posts","updatePosts","useEffect","a","firebase","firestore","collection","get","list","final","docs","map","value","memory","data","Promise","resolve","reject","axios","url","method","dataType","params","rss_url","handle","api_key","count","all","finall","newList","items","merged","concat","apply","console","log","sort","b","Date","pubDate","fetch","index","width"],"mappings":"8LACMA,EAAY,SAACC,GACjB,IAAIC,EAAMC,SAASC,cAAc,OAGjC,OAFAF,EAAIG,UAAYJ,EAChBA,EAAOC,EAAII,WAoCEC,MA9Bf,SAAcC,GACZ,OACE,qBAAKC,UAAU,aAAf,SACE,sBAAKA,UAAU,OAAf,UACE,qBACEC,IAAKF,EAAMG,KAAKC,UAChBH,UAAU,8BACVI,QAAS,SAACC,GAAD,OACNA,EAAEC,OAAOL,IACR,2EAEJM,IAAKR,EAAMG,KAAKM,QAElB,sBAAKR,UAAU,YAAf,UACE,oBAAIA,UAAU,wBAAd,SACGD,EAAMG,KAAKM,MAAMC,QAAQ,QAAS,OAErC,mBAAGT,UAAU,yBAAb,SACG,OArBQU,EAsBKnB,EAAUQ,EAAMG,KAAKS,SAtBpBC,EAsB8B,GAtBfC,EAsBmB,KArBpDH,EAAKI,OAASD,EAAYH,EAAKK,MAAMH,EAAeC,GAAaH,GAsB5D,SAEJ,mBAAGM,KAAMjB,EAAMG,KAAKe,KAAMjB,UAAU,oBAApC,qDAzBU,IAACU,EAAME,EAAeC,G,kCCCpCK,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,MAAO,CACLC,UAAW,SACXC,MAAOL,EAAMM,QAAQhB,KAAKiB,eAIf,SAASC,IAKNV,IAAhB,IALoC,EAMPW,mBAAS,IANF,mBAM7BC,EAN6B,KAMtBC,EANsB,KA6CpC,OArCAC,qBAAU,YACG,uCAAG,oCAAAC,EAAA,sEACOC,IAChBC,YACAC,WAAW,mBACXC,MAJS,cACNC,EADM,OAKNC,EAAQD,EAAKE,KAAKC,IAAV,uCAAc,WAAOC,GAAP,eAAAT,EAAA,6DACpBU,EAASD,EAAME,OADK,kBAEnB,IAAIC,SAAQ,SAACC,EAASC,GAW3BD,EAVaE,IAAM,CACjBC,IAAK,uCACLC,OAAQ,MACRC,SAAU,OACVC,OAAQ,CACNC,QAAQ,4BAAD,OAA8BV,EAAOW,QAC5CC,QAAS,2CACTC,MAAO,UAVa,2CAAd,uDALF,SAqBSX,QAAQY,IAAIlB,GArBrB,OAqBNmB,EArBM,OAsBNC,EAAUD,EAAOjB,KAAI,SAACC,GAE1B,OADmBA,EAAME,KAAKgB,SAG1BC,EAAS,GAAGC,OAAOC,MAAM,GAAIJ,GACnCK,QAAQC,IAAIJ,GACZA,EAAOK,MAAK,SAACjC,EAAGkC,GACd,OAAO,IAAIC,KAAKD,EAAEE,SAAW,IAAID,KAAKnC,EAAEoC,YAE1CtC,EAAY8B,GA/BA,4CAAH,qDAiCXS,KACC,IAGD,qBAAKtE,UAAU,aAAf,SACG8B,EAAMhB,OAAS,GACdgB,EAAMW,KAAI,SAACC,EAAO6B,GAChB,OAAO,cAAC,EAAD,CAAMC,MAAO,IAAiBtE,KAAMwC,GAAb6B","file":"static/js/6.415b6ac5.chunk.js","sourcesContent":["import React from 'react';\nconst tagToText = (node) => {\n  let tag = document.createElement('div');\n  tag.innerHTML = node;\n  node = tag.innerText;\n  return node;\n};\nconst shortenText = (text, startingPoint, maxLength) => {\n  return text.length > maxLength ? text.slice(startingPoint, maxLength) : text;\n};\nfunction Card(props) {\n  return (\n    <div className=\"cardHolder\">\n      <div className=\"card\">\n        <img\n          src={props.post.thumbnail}\n          className=\"card-img-top post-thumbnail\"\n          onError={(e) =>\n            (e.target.src =\n              'https://cdn-images-1.medium.com/max/483/1*hazuDJPEx9w1g7olSrbt8g@2x.png')\n          }\n          alt={props.post.title}\n        ></img>\n        <div className=\"card-body\">\n          <h5 className=\"card-title post-title\">\n            {props.post.title.replace('&amp;', '&')}\n          </h5>\n          <p className=\"card-text post-preview\">\n            {'...' +\n              shortenText(tagToText(props.post.content), 60, 200) +\n              '...'}\n          </p>\n          <a href={props.post.link} className=\"btn btn-link-grey\">\n            Read this article on Medium.com\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default Card;\n","import React, { memo, useEffect, useState } from 'react';\nimport Card from './card';\nimport axios from 'axios';\nimport firebase from '../../firebase';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function CardWrapper() {\n  //     Feed.load('https://medium.com/feed/@gupadhyaya', function(err, rss){\n  //     console.log(JSON.stringify(rss, null, 3));\n  // });\n\n  const classes = useStyles();\n  const [posts, updatePosts] = useState([]);\n\n  useEffect(() => {\n    const fetch = async () => {\n      const list = await firebase\n        .firestore()\n        .collection('medium_accounts')\n        .get();\n      const final = list.docs.map(async (value) => {\n        const memory = value.data();\n        return new Promise((resolve, reject) => {\n          const data = axios({\n            url: 'https://api.rss2json.com/v1/api.json',\n            method: 'GET',\n            dataType: 'json',\n            params: {\n              rss_url: `https://medium.com/feed/@${memory.handle}`,\n              api_key: 'y4dwd67lyurloc6qcmhyeagshi6xqpk9uveembgu',\n              count: 4,\n            },\n          });\n          resolve(data);\n        });\n      });\n      const finall = await Promise.all(final);\n      const newList = finall.map((value) => {\n        const individual = value.data.items;\n        return individual;\n      });\n      const merged = [].concat.apply([], newList);\n      console.log(merged);\n      merged.sort((a, b) => {\n        return new Date(b.pubDate) - new Date(a.pubDate);\n      });\n      updatePosts(merged);\n    };\n    fetch();\n  }, []);\n\n  return (\n    <div className=\"mediumWrap\">\n      {posts.length > 0 &&\n        posts.map((value, index) => {\n          return <Card width={200} key={index} post={value} />;\n        })}\n    </div>\n  );\n}\n"],"sourceRoot":""}